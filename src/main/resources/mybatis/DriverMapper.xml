<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmate.mapper.DriverMapper">

    <!-- 기사 리스트 -->
    <select id="getList" resultType="com.tmate.domain.JoinDriversVO">
        <![CDATA[
        select  m_id, m_name , m_birth, d_j_date , car_no, car_model
        from
            (
                select rownum rn, m.m_id as m_id, m.m_name as m_name , m.m_birth as m_birth, d.d_j_date as d_j_date , c.car_no as car_no, c.car_model as car_model
                from
                    member m inner join driver d on m.m_id = d.d_id
                             inner join car c on d.d_id = c.m_id
              where d_j_date is not null and  rownum <= #{cri.pageNum} * #{cri.amount})
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </select>
    
    <select id="getDriverByd_id" resultType="com.tmate.domain.JoinDriverProfileVO">
        select m.m_id, m.m_name,m.m_profile ,m.m_birth, d.d_license_no, d.d_j_date, d.d_acnum, c.car_no, c.car_model
        from member m inner join driver d on m.m_id = d.d_id
                      inner join car c on d.d_id = c.m_id
        where d_id  = #{d_id}
    </select>

    <select id="getDriverHistoryList" resultType="com.tmate.domain.HistoryDTO">
        <![CDATA[
        select  merchant_uid, h_s_time, h_e_time, h_s_place, h_f_place, h_allfare
        from (select rownum rn, merchant_uid, h_s_time, h_e_time, h_s_place, h_f_place, h_allfare
        from history where d_id = #{d_id} and rownum <= #{cri.pageNum} * #{cri.amount})
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </select>

    <select id="getDriverReviewList" resultType="com.tmate.domain.ReviewDTO">
        <![CDATA[
        select r_code, r_reason , merchant_uid
        from (select rownum rn , r_code, r_reason, merchant_uid
        from review where substr(r_code,0,13) =#{d_id} and rownum <=#{cri.pageNum} * #{cri.amount})
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </select>

    <select id="getLikeCount" resultType="_int">
        select count(*)
        from review where substr(r_code,0,14)=#{d_id} and substr(r_code,15) like 'L%'
    </select>

    <select id="getDisLikeCount" resultType="_int">
        select count(*)
        from review where substr(r_code,0,14)=#{d_id} and substr(r_code,15) like 'H%'
    </select>

    <select id="getCountHistory" resultType="_int">
        select count(*)
        from history
        where d_id = #{d_id}
    </select>

    <select id="getCountReview" resultType="_int">
        select count(*)
        from review
        where substr(r_code,0,13) = #{d_id}
    </select>

    <select id="getBanListByd_id" resultType="com.tmate.domain.JoinBanVO">
        select b.m_id , m.m_name, b.ban_reason, b.ban_reg_date
        from ban b inner join member m on b.m_id = m.m_id
        where d_id = #{d_id}
    </select>


    <!--  기사용 앱 관련 전용 쿼리문  -->

    <!--  기사 회원가입 멤버 테이블 삽입  -->
    <insert id="registerDriver">
        insert into member(m_id, m_name, m_imei, m_birth, password, m_email)
        values (#{m_id}, #{m_name}, #{m_imei}, #{m_birth}, #{password}, #{m_email})
    </insert>

    <!--  기사 회원가입 기사 테이블 삽입  -->
    <insert id="addDriverLicense">
        insert into driver(d_id, d_license_no, bank_company, d_acnum, d_regdate)
        values (#{d_id}, #{d_license_no}, #{bank_company}, #{d_acnum}, sysdate)
    </insert>

    <!--  운행이력  -->
    <select id="getAppDriverHistoryList" resultType="com.tmate.domain.driver.DriverHistoryVO">
        with
            review AS (
                select dp_id,
                       count(CASE WHEN re_driver = 0 THEN 1 END) AS like_cnt,
                       count(CASE WHEN re_driver = 1 THEN 1 END) AS hate_cnt,
                       listagg(m.m_name, '/') within group (order by m.m_name) name,
                       listagg(a.RE_DRIVER_REASON, '/') within group (order by m.m_name) reason
                from attend a join member m on a.M_ID = m.M_ID
                where a.dp_id in (select dp_id from dispatch where d_id = #{d_id})
                group by a.DP_ID
            )
        select substr(d.dp_id,19) together, d.d_id, d.dp_id, d.ALL_FARE, d.START_PLACE, d.FINISH_PLACE, d.START_TIME, d.END_TIME, r.name, r.reason, r.like_cnt, r.hate_cnt
        from DISPATCH d join review r on d.DP_ID = r.DP_ID
    </select>

    <!--  기사 회원 정보  -->
    <select id="getDriverDetail" resultType="com.tmate.domain.driver.DriverProfileVO">
        <![CDATA[
        with
            fare as (
                select d_id, sum(all_fare) as all_fare,
                       sum(CASE WHEN end_time between TRUNC(SYSDATE, 'MM') and LAST_DAY(SYSDATE) THEN all_fare END) AS month_fare,
                       count(CASE WHEN substr(dp_id, 19) = 0 THEN 1 END) AS to_cnt,
                       count(CASE WHEN substr(dp_id, 19) <= 1 THEN 1 END) AS no_cnt
                from dispatch
                group by d_id
            )
        select d.d_id, m.m_name, substr(m_id,3,11) phone, m.m_email, m.m_birth,
               d.d_acnum, d.d_j_date, d.bank_company,
               f.to_cnt, f.no_cnt,
               f.all_fare, f.month_fare,
               CASE WHEN substr(m.m_id,2,1) IN (1,3) THEN '남자'
                    WHEN substr(m.m_id,2,1) IN (2,4) THEN '여자' END as gender
        from member m inner join driver d
                                 on m.m_id = d.D_ID
                      full outer join fare f
                                      on f.d_id = d.d_id
        where d.d_id = #{d_id};
        ]]>
    </select>

    <!--  이메일 변경  -->
    <update id="emailModify">
        update member
        set m_email = #{m_email}
        where m_id = #{m_id}
    </update>

    <!--  기사 차량 정보  -->
    <select id="getCarList" resultType="com.tmate.domain.CarDTO">
        select c.car_model, c.CAR_NO, c.CAR_COLOR, c.car_kind
        from car c join corp co on c.CAR_NO = co.CAR_NO
        where co.D_ID = #{d_id}
    </select>

    <!--  기사 차량 선택  -->
    <update id="updateDriverCar">
        update corp
        set car_no = #{car_no}
        where d_id = #{d_id}
    </update>

    <!--  기사 차량 추가  -->
    <insert id="insertCar">
        insert into car
        values (#{car_no}, #{car_model}, #{car_kind}, #{car_color}, #{m_id})
    </insert>

    <!--  블랙리스트에 표시할 동승 인원 데이터 -->
    <select id="getAttendList" resultType="com.tmate.domain.driver.AttendListVO">
        select m_id, m_name, concat(to_char(m_birth,'rr'), '년생') age,
               CASE WHEN substr(m_id,2,1) IN (1,3) THEN '남'
                    WHEN substr(m_id,2,1) IN (2,4) THEN '여' END as gender
        from member
        where m_id in (select m_id
                       from attend
                       where dp_id = #{dp_id});
    </select>

    <!--  블랙리스트 추가  -->
    <insert id="insertBlacklist">
        insert into ban(d_id, ban_reason, m_id)
        values (#{d_id}, #{ban_reaseon}, #{m_id})
    </insert>

    <!--  블랙리스트 제거  -->
    <delete id="deleteBlacklist">
        delete from ban where d_id = #{d_id} and m_id = #{m_id}
    </delete>

    <!--  기사 상태 변경  -->
    <update id="setDriverStatus">
        update driver
        set d_status = #{d_status}
        where d_id = #{d_id}
    </update>

    <!--  기사 승인 상태 확인  -->
    <select id="findDriverDateById" resultType="com.tmate.domain.DriverDTO">
        select *
        from driver
        where d_id = #{d_id}
    </select>

    <!--  기사 사이드바 내용 가져오기  -->
    <select id="findSidebarProfileById" resultType="com.tmate.domain.driver.SidebarProfileVO">
        select m.M_STATUS, m.M_PROFILE, m.m_name, c.*, co.corp_code
        from member m
                 join car c on m.M_ID = c.M_ID
                 join CORP co on c.CAR_NO = co.CAR_NO
        where co.D_ID = #{d_id}
    </select>

</mapper>