<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmate.mapper.DriverMapper">

    <!-- 기사 리스트 -->
    <select id="getList" resultType="com.tmate.domain.JoinDriversVO">
        <![CDATA[
        select  m_id, m_name , m_birth, d_j_date , car_no, car_model
        from
            (
                select rownum rn, m.m_id as m_id, m.m_name as m_name , m.m_birth as m_birth, d.d_j_date as d_j_date , c.car_no as car_no, c.car_model as car_model
                from
                    member m inner join driver d on m.m_id = d.d_id
                             inner join car c on d.d_id = c.m_id
              where d_j_date is not null and  rownum <= #{cri.pageNum} * #{cri.amount})
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </select>
    
    <select id="getDriverByd_id" resultType="com.tmate.domain.JoinDriverProfileVO">
        select m.m_id, m.m_name,m.m_profile ,m.m_birth, d.d_license_no, d.d_j_date, d.d_acnum, c.car_no, c.car_model
        from member m inner join driver d on m.m_id = d.d_id
                      inner join car c on d.d_id = c.m_id
        where d_id  = #{d_id}
    </select>

    <select id="getDriverHistoryList" resultType="com.tmate.domain.HistoryDTO">
        <![CDATA[
        select  merchant_uid, h_s_time, h_e_time, h_s_place, h_f_place, h_allfare
        from (select rownum rn, merchant_uid, h_s_time, h_e_time, h_s_place, h_f_place, h_allfare
        from history where d_id = #{d_id} and rownum <= #{cri.pageNum} * #{cri.amount})
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </select>

    <select id="getDriverReviewList" resultType="com.tmate.domain.ReviewDTO">
        <![CDATA[
        select r_code, r_reason , merchant_uid
        from (select rownum rn , r_code, r_reason, merchant_uid
        from review where substr(r_code,0,13) =#{d_id} and rownum <=#{cri.pageNum} * #{cri.amount})
        where rn > (#{cri.pageNum} - 1) * #{cri.amount}
        ]]>
    </select>

    <select id="getLikeCount" resultType="_int">
        select count(*)
        from review where substr(r_code,0,14)=#{d_id} and substr(r_code,15) like 'L%'
    </select>

    <select id="getDisLikeCount" resultType="_int">
        select count(*)
        from review where substr(r_code,0,14)=#{d_id} and substr(r_code,15) like 'H%'
    </select>

    <select id="getCountHistory" resultType="_int">
        select count(*)
        from history
        where d_id = #{d_id}
    </select>

    <select id="getCountReview" resultType="_int">
        select count(*)
        from review
        where substr(r_code,0,13) = #{d_id}
    </select>

    <select id="getBanListByd_id" resultType="com.tmate.domain.JoinBanVO">
        select b.m_id , m.m_name, b.ban_reason
        from ban b inner join member m on b.m_id = m.m_id
        where d_id = #{d_id}
    </select>


    <!--  기사용 앱 관련 전용 쿼리문  -->

    <!--  기사 회원가입 멤버 테이블 삽입  -->
    <insert id="registerDriver">
        insert into member(m_id, m_name, m_profile, m_imei, m_birth, m_house)
        values (#{m_id}, #{m_name}, #{m_profile}, #{m_imei}, #{m_birth}, #{m_house})
    </insert>

    <!--  기사 회원가입 기사 테이블 삽입  -->
    <insert id="addDriverLicense">
        insert into driver(d_id, d_license_no, bank_company, d_acnum, d_regdate)
        values (#{m_id}, #{d_license_no}, #{bank_company}, #{d_acnum}, sysdate)
    </insert>

    <!--  운행이력  -->
    <select id="getAppDriverHistoryList" resultType="com.tmate.domain.driver.DriverHistoryVO">
        with
            review_cnt AS (
                select substr(r_code,1,14) AS d_id,
                       count(CASE WHEN substr(r_code,15,1) = 'L' THEN 1 END) AS like_cnt,
                       count(CASE WHEN substr(r_code,15,1) = 'H' THEN 1 END) AS hate_cnt
                from review r
                group by substr(r_code,1,14)
            )
        select h.*, substr(h.merchant_uid,28) to_enabled, r.hate_cnt, r.like_cnt
        from history h full outer join review_cnt r
                                       on h.d_id = r.d_id
        where h.d_id = #{d_id}
        order by h.h_s_time desc
    </select>

    <!--  운행이력 리뷰 보기 클릭  -->
    <select id="getAppDriverReviewList">
        select r.*, substr(r_code,15,1) as reaction
        from review r
        where merchant_uid = #{merchant_uid}
    </select>





    <!--  기사 회원 정보  -->
    <select id="getDriverDetail" resultType="com.tmate.domain.driver.DriverProfileVO">
        with
            matching_count as(
                select d_id,
                       count(CASE WHEN substr(MERCHANT_UID, 28) = 0 THEN 1 END) AS to_cnt,
                       count(CASE WHEN substr(MERCHANT_UID, 28) = 1 THEN 1 END) AS no_cnt
                from HISTORY
                group by d_id),
            fare as (
                select d_id, sum(h_allfare) as all_fare,
                       sum(CASE WHEN h_e_time between TRUNC(SYSDATE, 'MM') and LAST_DAY(SYSDATE) THEN h_allfare END) AS month_fare
                from HISTORY
                group by d_id
            )
        select d.d_id, m.m_name, substr(m_id,3,11) phone, m.m_email, d.d_acnum, d.d_j_date, c.to_cnt, c.no_cnt, f.all_fare, f.month_fare
        from member m inner join driver d
                                 on m.m_id = d.D_ID
                      full outer join matching_count c
                                      on c.D_ID = d.D_ID
                      full outer join fare f
                                      on f.d_id = d.d_id
        where d.d_id = #{d_id};
    </select>

    <!--  이메일 변경  -->
    <update id="emailModify">
        update member
        set m_email = #{m_email}
        where m_id = #{m_id}
    </update>

    <!--  기사 차량 정보  -->
    <select id="getCarList" resultType="com.tmate.domain.CarDTO">
        select *
        from car
        where m_id = #{d_id}
    </select>

    <!--  기사 차량 추가  -->
    <insert id="insertCar">
        insert into car
        values (#{car_no}, #{car_model}, #{car_kind}, #{car_color}, #{m_id})
    </insert>

    <!--  블랙리스트 추가  -->
    <insert id="insertBlacklist">
        insert into ban(d_id, ban_reason, m_id)
        values (#{d_id}, #{ban_reaseon}, #{m_id})
    </insert>

    <!--  블랙리스트 제거  -->
    <delete id="deleteBlacklist">
        delete from ban where d_id = #{d_id} and m_id = #{m_id}
    </delete>

    <!--  기사 상태 변경  -->
    <update id="setDriverStatus">
        update driver
        set d_status = #{d_status}
        where d_id = #{d_id}
    </update>

</mapper>