<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmate.mapper.Membermapper">

        <insert id="insertMember">
            insert into member(m_id, m_name, m_imei,m_birth, m_email,m_house)
            values(#{m_id},#{m_name},#{m_imei},#{m_birth,jdbcType=TIMESTAMP},#{m_email,jdbcType=VARCHAR},#{m_house})
        </insert>

    <select id="getList" resultType="com.tmate.domain.MemberDTO">
         <![CDATA[
        select m_id, m_name, m_regdate, m_n_use, m_t_use, m_status, m_birth
        from
            (
                select rownum rn, m_id, m_name, m_regdate, m_n_use, m_t_use, m_status, m_birth
                from
                    member
                where m_id  like 'm%' and rownum <= #{pageNum} * #{amount}
            )
        where rn > (#{pageNum} - 1) * #{amount}
        ]]>
    </select>

    <update id="updateMember">
        update member
        set m_house = #{m_house}, m_email = #{m_email}
        where m_id = #{m_id}
    </update>

    <select id="getMemberByM_id" resultType="com.tmate.domain.MemberDTO">
        select * from member
        where m_id = #{m_id}
    </select>

    <select id="countMembers" resultType="_int">
        select count(*)
        from member
        where m_id not like 'a%'
    </select>

    <select id="countDrivers" resultType="_int">
        select count(*)
        from (select * from driver where d_j_date is not null)
    </select>

    <update id="updateDate">
        update driver set d_j_date = sysdate where d_id = #{d_id}
    </update>

    <delete id="deleteMember">
        delete from member
        where m_id = #{m_id}
    </delete>

    <delete id="deleteDriver">
        delete from driver
        where d_id = #{d_id}
    </delete>

    <delete id="deleteCar">
        delete from car
        where m_id = #{d_id}
    </delete>



    <select id="searchPermission" resultType="com.tmate.domain.MemberDTO">
        select *
        from member
        where substr(m_id,3,11) = #{phoneNumber}
          and m_name = #{name}
    </select>

    <select id="getTotalCount" resultType="_int">
        select count(*)
        from member
        where m_id  like 'm%'
    </select>

    <!-- 소셜 로그인 작업 -->
    <insert id="insertSocialEmail">
        insert into social
        values(#{s_email}, #{m_id})
    </insert>

    <!-- 멤버 권한 작업 -->
    <insert id="insertMemberRole">
        insert into member_role
        values(#{m_role},#{m_id})
    </insert>

    <select id="findSocialMember" resultType="com.tmate.domain.MemberDTO">
        select m.*,s.s_email
        from member m inner join social s on m.m_id = s.m_id
        where s.s_email = #{s_email}
    </select>

    <select id="findRoleList" resultType="com.tmate.domain.MemberRole">
        select *
        from member_role
        where m_id = #{m_id}
    </select>

    <!-- 포인트 작업 -->
    <insert id="insertPoint">
        insert into(po_id, m_id, po_course, po_exact, po_result, po_time, bd_id)
        values (p_sec.nextval,#{m_id},#{po_course},#{po_exact},#{po_result},systimestamp,null)
    </insert>

    <update id="updateM_point">
        update member
        set m_point += #{fare}
        where m_id = #{m_id}
    </update>

    <select id="findPointListByM_id" resultType="com.tmate.domain.PointDTO">
        select * from point where m_id = #{m_id}
    </select>

    <select id="findM_Point" resultType="_int">
        select m_point from member where m_id = #{m_id}
    </select>

    <select id="selectDv_optionByM_id" resultType="com.tmate.domain.Dv_optionDTO">
        select * from driving_option where m_id = #{m_id}
    </select>

    <update id="updateDv_optionStatus">
        update driving_option
        set do_hurry = #{do_hurry, jdbcType=CHAR},
            do_navi = #{do_navi, jdbcType=CHAR},
            do_quiet = #{do_quiet, jdbcType=CHAR},
            do_animal = #{do_animal, jdbcType=CHAR},
            do_load = #{do_load, jdbcType=CHAR},
            do_child = #{do_child, jdbcType=CHAR}
        where m_id = #{m_id}
    </update>

    <!--  로그인 확인  -->
    <select id="loginCheck" resultType="com.tmate.domain.LoginVO">
        select *
        from (
                 select member.*, substr(m_id,1,1) as auth, substr(m_id,3,11) as phone
                 from member
             )
        where auth = #{auth} AND (phone = #{id} OR M_EMAIL = #{id})
                             AND password = #{password}
    </select>

    <!--  회원 미사용 포인트 조회  -->
    <select id="unusedPointByM_id" resultType="_int">
        select point-use_point as get_point
        from (
                 select m_id, sum(CASE WHEN po_exact = 0 THEN po_result END) as point, sum(CASE WHEN po_exact = 1 THEN po_result END) as use_point
                 from POINT
                 where m_id = #{m_id}
                 group by m_id
             )
    </select>

</mapper>